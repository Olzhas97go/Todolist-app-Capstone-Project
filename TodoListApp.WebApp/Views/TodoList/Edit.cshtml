@model TodoListWebApiModel

<div class="card">
    <div class="card-header">
        <h2>Edit To-Do List</h2>
    </div>
    <div class="card-body">
        <form method="post" asp-action="Edit" asp-route-id="@Model.Id">
            <input type="hidden" name="_method" value="PUT" />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Tasks" class="control-label"></label>
                <ul id="taskList" class="list-group list-group-flush">
                    @for (int i = 0; i < Model.Tasks.Count; i++)
                    {
                        <li class="list-group-item">
                            <input asp-for="Tasks[i].Description" class="form-control" />
                            <span asp-validation-for="Tasks[i].Description" class="text-danger"></span>
                        </li>
                    }
                </ul>
                <button type="button" id="addTaskButton" class="btn btn-secondary mt-2">Add Task</button>
            </div>

            <div class="form-group mt-3">
                <button type="submit" class="btn btn-primary">Save Changes</button>
                <a asp-action="Index" class="btn btn-secondary ml-2">Back to List</a>
            </div>
        </form>
    </div>
</div>

<script>
    document.getElementById("addTaskButton").addEventListener("click", function() {
        const taskList = document.getElementById("taskList");
        const newIndex = taskList.children.length - 1;

        const newListItem = document.createElement("li");
        newListItem.innerHTML = `
            <input type="text" class="form-control" name="Tasks[${newIndex}]" value="" />
            <span class="text-danger field-validation-valid" data-valmsg-for="Tasks[${newIndex}]" data-valmsg-replace="true"></span>
        `;

        taskList.insertBefore(newListItem, taskList.lastElementChild);
    });
</script>
