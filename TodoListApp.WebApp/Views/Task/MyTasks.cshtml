@model TodoListApp.WebApp.Models.TaskModels.TodoListWithTasksViewModel

<div class="card">
    <div class="card-header">
        <h2>My Tasks</h2>
    </div>
    <div class="card-body">
        @if (TempData["SuccessMessage"] != null)
        {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
        }
        else if (TempData["ErrorMessage"] != null)
        {
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
        }

        @* Search Form *@
        <form asp-action="MyTasks" method="get" class="d-flex">
            <input type="text" name="searchString" class="form-control me-2" placeholder="Search by Title" value="@Model.SearchString" />
            <button type="submit" class="btn btn-outline-success">Search</button>
        </form>

        @if (Model.Tasks.Any())
        {
        <ul class="list-group list-group-flush">
            @foreach (var task in Model.Tasks)
            {
            <li class="list-group-item d-flex justify-content-between align-items-center @(task.IsOverdue ? "list-group-item-danger" : "")">
                <div>
                            <span class="form-check-label" style="@(task.IsCompleted && !task.IsOverdue ? "text-decoration: line-through;" : "")">
                                @task.Name
                            </span>
                    @if (task.IsOverdue)
                    {
                    <span class="text-danger ml-2">[overdue]</span>
                    }
                </div>
                <div class="d-flex justify-content-end">
                    <a asp-action="Details" asp-controller="Task" asp-route-taskId="@task.Id"
                       asp-route-source="mytasks"
                       class="btn btn-sm btn-info">Details</a>
                    <a asp-action="EditTask" asp-controller="Task" class="btn btn-sm btn-warning"
                       asp-route-taskId="@task.Id">Edit</a>

                    <form asp-action="Delete" asp-controller="Task" method="post" class="d-inline">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="taskId" value="@task.Id" />
                        <button type="submit" class="btn btn-sm btn-danger"
                                onclick="return confirm('Are you sure you want to delete this task?')">
                            Delete
                        </button>
                    </form>
                </div>
            </li>
            }
        </ul>
        }
        else
        {
        <p>No tasks found.</p>
        }

        <div class="d-flex justify-content-start">
            @if (Model.Tasks.Any())
            {
            var firstTask = Model.Tasks.FirstOrDefault();
            if (firstTask != null)
            {
            <a asp-action="CreateTask" asp-controller="Task" asp-route-todoListId="@firstTask.TodoListId" class="btn btn-success mt-3">Create Task</a>
            }
            else
            {
            <p>You don't have any tasks yet. Create a to-do list first!</p>
            }
            }
        </div>
    </div>
</div>
