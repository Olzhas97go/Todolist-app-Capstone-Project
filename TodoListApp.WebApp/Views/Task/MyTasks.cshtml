@using Microsoft.AspNetCore.Mvc.TagHelpers
@using TodoListApp.WebApi.Models
@model TodoListApp.WebApp.Models.TaskModels.TodoListWithTasksViewModel

<div class="card">
    <div class="card-header">
        <h2>My Tasks</h2>
    </div>

    <div class="card-body">
        @* Add filter and sorting options here *@

        @if (Model.Tasks.Any())
        {
        <ul class="list-group list-group-flush">
            @foreach (var task in Model.Tasks)
            {
            <li class="list-group-item @(task.IsOverdue ? "list-group-item-danger" : "")">
                <div>
                            <span class="form-check-label" style="@(task.Status == ToDoTaskStatus.Completed ? "text-decoration: line-through;" : "")">
                                @task.Name
                            </span>
                </div>
                <div class="d-flex justify-content-end">
                    <a asp-action="Details" asp-controller="Task" class="btn btn-sm btn-info"
                       asp-route-taskId="@task.Id">Details</a>
                    <a asp-action="EditTask" asp-controller="Task" class="btn btn-sm btn-warning"
                       asp-route-taskId="@task.Id">Edit</a>
                    <form asp-action="Delete" asp-controller="Task" method="post" class="d-inline">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="taskId" value="@task.Id" />
                        <button type="submit" class="btn btn-sm btn-danger"
                                onclick="return confirm('Are you sure you want to delete this task?')">
                            Delete
                        </button>
                    </form>
                </div>
            </li>
            }
        </ul>
        }
        else
        {
        <p>No tasks found.</p>
        }

        <div class="d-flex justify-content-start">
            <a asp-action="CreateTask" class="btn btn-success mt-3">Create Task</a>
        </div>
    </div>
</div>
